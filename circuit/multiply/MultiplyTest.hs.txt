------------------------------------------------------------------------
-- Multiplier simulation driver
------------------------------------------------------------------------

{- MultiplyTest.hs --- simulation driver and test data for multiply
circuit.  To compile and run:
  ghc --make MultiplyTest
  ./MultiplyTest
-}

module Main where
import HydraLib
import HydraLib.StandardCircuits
import Multiply

------------------------------------------------------------------------
-- Main program to run multiplier on test data

main :: IO ()
main =
  do run_multiply mult_test_data_1

------------------------------------------------------------------------
-- Test data

mult_test_data_1 :: [[Int]]
mult_test_data_1 =
--     start  x    y
--     ~~~~~~~~~~~~~~
       [[1,  50,  75],
        [0,   0,   0],
        [0,   0,   0],
        [0,   0,   0],
        [0,   0,   0],
        [0,   0,   0],
        [0,   0,   0],
        [0,   0,   0],
        [0,   0,   0],
        [1, 100, 100],
        [0,   0,   0],
        [0,   0,   0],
        [0,   0,   0],
        [0,   0,   0],
        [0,   0,   0],
        [0,   0,   0],
        [0,   0,   0],
        [0,   0,   0],
        [0,   0,   0],
        [0,   0,   0],
        [1, 100, 100],
        [0,   0,   0],
        [0,   0,   0],
        [1,   2,   3],
        [0,   0,   0],
        [0,   0,   0],
        [0,   0,   0],
        [0,   0,   0],
        [0,   0,   0],
        [0,   0,   0]]

------------------------------------------------------------------------
-- Simulation driver

run_multiply :: [[Int]] -> IO ()
run_multiply input =
  do putStrLn "\nrun_multiply"
     runThroughInput input output
  where
    k = 8
    start = getbit   input 0
    x     = getbin k input 1
    y     = getbin k input 2
    (rdy,prod,rx,ry,s) = multiply k start x y
    output =
      [string "Input: ",
       bit start, bindec 4 x, bindec 4 y,
       string "  Output: ",
       bit rdy, bindec 6 prod, bindec 4 rx, bindec 6 ry,
       bindec 6 s]
